[data_stokesI]
base = base.data

[base.data]
directory = data/SGRA_2017
file filter = ER6_*_096*hops*LMT*.uvfits
minimum number of data points in time averaging bin = int :: 8
gap time for averaging = float ::20
minimum antenna distance = float ::10000
load polarization = stokesI


[optimization]
output directory = results/EHT_SgrA_dynamic_April_6th_2017
random seed = 0
save strategy = last

[base.optimization]
nonlinear sampling minimizer = None
sampling iteration controller = *icsamp
reset = None
n samples = 16
kl minimizer = 5**mini0, *mini1

[optimization.0]
base = base.optimization
total iterations = 15
likelihood energy = 10**lhmix_res0, *lhcalib_res0
transitions = *initial, None

[optimization.1]
base = base.optimization
total iterations = 25
likelihood energy = 10**lhmix_res1, *lhcalib_res1
transitions = *zoom01, None

[optimization.2]
base = base.optimization
total iterations = 25
likelihood energy = 10**lhmix_res2, *lhcalib_res2
transitions = *zoom12, None



################################################################################
# Likelihoods

# StokesI

[lhmix_res0]
base = base.lhmix_stokesI
mix scale = float :: 0.9
sky model = *sky_res0


[lhcalib_res0]
base = base.lhmix_stokesI
mix scale = float :: 0
sky model = *sky_res0

[lhmix_res1]
base = base.lhmix_stokesI
mix scale = float :: 0.9
sky model = *sky_res1

[lhcalib_res1]
base = base.lhmix_stokesI
mix scale = float :: 0
sky model = *sky_res1

[lhmix_res2]
base = base.lhmix_stokesI
mix scale = float :: 0.9
sky model = *sky_res2

[lhcalib_res2]
base = base.lhmix_stokesI
mix scale = float :: 0
sky model = *sky_res2


[base.lhmix_stokesI]
obs = *data_stokesI
calibration model = *calibration.independentAmplitudes_stokesI
lh closure phases = *lh_closure_phases_stokesI
lh closure amplitudes = *lh_closure_amplitudes_stokesI
lh calibration logamplitudes = *lh_calib_logamplitudes_stokesI
alma lc = None
scattering = bool :: True


[lh_closure_phases_stokesI]
obs = *data_stokesI
closure phase systematics = float :: 0


[lh_closure_amplitudes_stokesI]
obs = *data_stokesI
closure amplitude systematics = float :: 0


[lh_calib_logamplitudes_stokesI]
obs = *data_stokesI
log amplitude systematics = float :: 0

[calibration.independentAmplitudes_stokesI]
AA std = float :: 0.057
AP std = float :: 0.070
JC std = float :: 0.062
SM std = float :: 0.053
AZ std = float :: 0.093
LM std = float :: 0.276
PV std = float :: 0.093
SP std = float :: 0.11
obs = *data_stokesI

[calibration.simpleAmplitudes_stokesI]
obs = *data_stokesI
std = float :: 0.1

################################################################################


################################################################################
# TRANSITIONS
[initial]
base = base.transition
target likelihood = *lhmix_res0
sky model = *sky_res0
freq npix = int :: 1

mode = disk
disk location x = 0muas
disk location y = 0muas
disk radius = 45muas
disk smoothing = 5muas
flux = float :: 1
disk std = 45muas


[zoom01]
base = base.transition
sky old = *sky_res0
sky new = *sky_res1
domain likelihood = *lhmix_res0
target likelihood = *lhmix_res1

[zoom12]
base = base.transition
sky old = *sky_res1
sky new = *sky_res2
domain likelihood = *lhmix_res1
target likelihood = *lhmix_res2

[base.transition]
total iterations = int :: 5
n samples = int :: 16
initial max std = float :: 0.0001
nonlinear sampling minimizer = None ::
sampling iteration controller = *icsamp
kl minimizer = *mini_trans

# /TRANSITIONS
################################################################################

[sky_res0]
base = base.sky
space npix x = int :: 100
space npix y = int :: 100
delta t = float :: 2000

[sky_res1]
base = base.sky
space npix x = int :: 150
space npix y = int :: 150
delta t = float :: 300

[sky_res2]
base = base.sky
space npix x = int :: 200
space npix y = int :: 200
delta t = float :: 60

[base.sky]
model = cfm
obs = *data_stokesI
space fov x = 300muas
space fov y = 300muas
freq npix = int :: 1
freq zero padding factor = float :: 1
time zero padding factor = float :: 1.3
polarization = I
stokesI zero mode offset = float :: 0
stokesI zero mode mean = float :: 1
stokesI zero mode std = float :: 0.3
stokesI space fluctuations mean = float :: 1.5
stokesI space fluctuations std = float :: 1.
stokesI space loglogavgslope mean = float :: -3
stokesI space loglogavgslope std = float :: 1.
stokesI space flexibility mean = None
stokesI space flexibility std = None
stokesI space asperity mean = None
stokesI space asperity std = None
stokesI time fluctuations mean = float :: 0.5
stokesI time fluctuations std = float :: 0.2
stokesI time loglogavgslope mean = float :: -2
stokesI time loglogavgslope std = float :: 0.5
stokesI time flexibility mean = None
stokesI time flexibility std = None
stokesI time asperity mean = None
stokesI time asperity std = None
prefactor model = average all lognormal
prefactor mean = float :: 1
prefactor std = float :: 1

[mini0]
custom function = nifty8.VL_BFGS
controller = *icmini0

[mini1]
custom function = nifty8.NewtonCG
controller = *icmini1

[mini2]
custom function = nifty8.NewtonCG
controller = *icmini2

[mini_trans]
custom function = nifty8.NewtonCG
controller = *icmini_trans

[icsamp]
custom function = nifty8.AbsDeltaEnergyController
name = Sampling (linear)
iteration limit = int :: 100
deltaE = float :: 0.05

[icsamp2]
custom function = nifty8.AbsDeltaEnergyController
name = Sampling (linear)
iteration limit = int :: 500
deltaE = float :: 0.05

[icmini0]
custom function = nifty8.AbsDeltaEnergyController
name = KL
iteration limit = int :: 50
deltaE = float :: 0.5
convergence level = int :: 2

[icmini1]
custom function = nifty8.AbsDeltaEnergyController
name = KL
iteration limit = int :: 10
deltaE = float :: 0.5
convergence level = int :: 2

[icmini2]
custom function = nifty8.AbsDeltaEnergyController
name = KL
iteration limit = int :: 25
deltaE = float :: 0.5
convergence level = int :: 2

[icmini_trans]
custom function = nifty8.AbsDeltaEnergyController
name = KL
iteration limit = int :: 3
deltaE = float :: 0.5
convergence level = int :: 2